require 'rake/clean'
CLEAN.include "**/*.rbc", ".rbx"

task :default => :spec
task :test    => :spec

desc "run specs"
task :spec => :signature do
  $LOAD_PATH.unshift 'test', 'lib'

  require 'minitest/unit'
  MiniTest::Unit.autorun

  Dir.glob('test/**/*_test.rb') do |file|
    load file
  end

  require 'reak'
  Reak::CodeLoader.run('test/bootstrap/TestHelper')
  Dir.glob('test/**/*Test.st') do |file|
    Reak::CodeLoader.run(file)
  end
end

desc "regenerates lib/reak/bootstrap/signature.rb"
task :signature do
  require 'digest/sha1'
  digest = Digest::SHA1.new

  files = Dir.glob('lib/reak/{bootstrap,compiler}/**/*.{rb,st}')
  files << 'lib/reak/kernel/Alpha.st'
  files.each do |name|
    File.open name, "r" do |file|
      while chunk = file.read(1024)
        digest << chunk
      end
    end
  end

  # Collapse the digest to a 64bit quantity
  hd = digest.hexdigest
  signature_hash = hd[0, 16].to_i(16) ^ hd[16,16].to_i(16) ^ hd[32,8].to_i(16)

  File.open "lib/reak/signature.rb", "wb" do |file|
    file.puts "# This file is generated by `rake signature`. The signature"
    file.puts "# is used to ensure that only current compiled files are loaded."
    file.puts "Reak::Signature = Rubinius::Signature ^ #{signature_hash}"
  end
end
